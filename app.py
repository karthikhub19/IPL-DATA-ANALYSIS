# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vReBcK_rizjlJ5AHGGaqye2OPeMM-guB
"""

!pip install jupyter-dash -q

!pip install dash==2.0.0

!pip install ipython

from jupyter_dash import JupyterDash
import dash_core_components as dcc
import dash_html_components as html

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('https://raw.githubusercontent.com/nethajinirmal13/Training-datasets/main/matches.csv')

print(df.head())
print(df.info())

df1=df.drop(['id','umpire1','umpire2','umpire3'],axis=1)   
df1.info()

temp=df1.groupby('city')['venue']
temp.first()

c1=df1[df1['city'].isnull()]                   
c1

df1['city']=df1['city'].fillna('Dubai')                #the  null values all belong to same venue, so easily fill the city wit  venue name
print(df1.info())

temp=df1.groupby('city')['venue']                   
temp.first()

c2=df1[df1['winner'].isnull()]
c2

df2=df1.dropna(subset=['winner'])      
df2.info()

df2.isna().sum()

df2['city'].unique()

df2['city'].value_counts()

mappings={'Bangalore':'Bangalore','Bengaluru':'Bangalore'}
df2['city']=df2['city'].replace(mappings)
df2['city'].unique()

mappings={'Rising Pune Supergiant':'Rising Pune Supergiants','Delhi Daredevils':'Delhi Capitals'}
df2['team1']=df2['team1'].replace(mappings)
df2['team2']=df2['team2'].replace(mappings)
df2['winner']=df2['winner'].replace(mappings)
df2['toss_winner']=df2['toss_winner'].replace(mappings)
print(df2['team1'].unique())
print(df2['team2'].unique())
print(df2['winner'].unique())

df2['dl_applied'].value_counts()

df2['date']=pd.to_datetime(df2['date'])
df2.info()

DF=df2
DF

DF.info()

temp1=pd.DataFrame(DF['winner'])
temp1

winner=temp1.groupby('winner')
winner

season=DF.groupby('winner')
print(season)
season.first()

DF.describe()

sns.distplot(DF['season'])
plt.show()

!pip install jupyter-dash -q

import plotly.express as px

df=DF

x=df['winner'].value_counts().sort_index()
print(x)
print(x.shape)

y=df['winner'].unique()
y=sorted(y)
y

lst=[]
for i in range(13):
  lst.append(x[i])
lst

x2=df['team1'].value_counts().sort_index(ascending=True)
print(x2)

x3=df['team2'].value_counts().sort_index(ascending=True)
print(x3)

lst2=[]
for i in range(13):
  temp=x2[i]+x3[i]
  lst2.append(temp)

print(lst2)

winner_list=pd.DataFrame({"Team":y,"Win_count":lst,"Total_matches":lst2})         
winner_list

fig1=px.bar(winner_list,x="Team",y="Win_count",color="Total_matches",title="Win Count of All teams across all seasons")
fig1.show()

x=df['player_of_match'].value_counts().sort_index(ascending=True)
x.shape

fig2=px.histogram(df,x="player_of_match",color='player_of_match')
fig2.show()

df=DF 
lst=[]
for i in df['winner'].unique():
  lst.append(i)
lst=sorted(lst)
print(lst)

max_runs=[]
max_wickets=[]

for i in lst:
  x=df[df['winner']==i]
  max_value=x.max()
  
  max_runs.append(max_value['win_by_runs'])
  max_wickets.append(max_value['win_by_wickets'])

win_list=pd.DataFrame({"Team":lst,"MAX_win_by_runs":max_runs,"MAX_win_by_wickets":max_wickets})
win_list

fig3= px.sunburst(win_list, path=[ 
                            'MAX_win_by_runs',
                            'Team'],values='MAX_win_by_runs',color='MAX_win_by_runs',title="Max runs by which each team has won"
                  )
fig3.show()

fig31= px.sunburst(win_list, path=['MAX_win_by_wickets',
                            'Team'],values='MAX_win_by_wickets',color='MAX_win_by_wickets',
                   title="Max wickets by which each team has won"
                  )
fig31.show()

df=DF

lst=list()
for i in df['winner'].unique():
  lst.append(i)
lst=sorted(lst)
print(lst)

team='Chennai Super Kings'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])#.sort_index(ascending=True)
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)

for i in range(27):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig41=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:- Chennai Super Kings ")
fig41.show()

team='Deccan Chargers'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=[]
lst=[]
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig42=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:- Deccan Chargers")
fig42.show()

team='Delhi Capitals'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=[]
lst=[]
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig43=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:- Delhi Capitals")
fig43.show()

team='Gujarat Lions'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig44=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:- Gujarat Lions")
fig44.show()

team='Kings XI Punjab'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig45=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Kings XI Punjab")
fig45.show()

team='Kochi Tuskers Kerala'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig46=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Kochi Tuskers Kerala")
fig46.show()

team='Kolkata Knight Riders'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig47=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Kolkata Knight Riders")
fig47.show()

team='Mumbai Indians'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig48=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Mumbai Indians")
fig48.show()

team='Pune Warriors'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig49=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Pune Warriors")
fig49.show()

team='Rajasthan Royals'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team


fig410=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Rajasthan Royals")
fig410.show()

team='Rising Pune Supergiants'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig411=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Rising Pune Supergiants")
fig411.show()

team='Royal Challengers Bangalore'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig412=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Royal Challengers Bangalore")
fig412.show()



team='Sunrisers Hyderabad'
df1=df[df['winner']==team]
df1
df2=pd.DataFrame(df1[['winner','venue']])
df2
venue=list()
lst=list()
for i in df2['venue'].unique():
  venue.append(i)

venue=sorted(venue)
print(venue)
x=df2['venue'].value_counts().sort_index(ascending=True)
y=x.shape
for i in range(y[0]):
  lst.append(x[i])
print(lst)
print(len(venue))
print(len(lst))

df_team=pd.DataFrame({"venue":venue,"win_count":lst})
df_team

fig413=px.bar(df_team,x="win_count",y="venue", orientation='h',color="venue",title="Win count at each stadium for:-Sunrisers Hyderabad")
fig413.show()

DF.head()

df=DF

lst=list()
for i in df['winner'].unique():
  lst.append(i)
lst=sorted(lst)
print(lst)  #list of teams in alphabetical order

x2=df['team1'].value_counts().sort_index(ascending=True)
x3=df['team2'].value_counts().sort_index(ascending=True)

lst_2=list()
for i in range(13):
  temp=x2[i]+x3[i]
  lst_2.append(temp)

print(len(lst_2))   #list of total matches played by teams

y=df['winner'].value_counts().sort_index(ascending=True)

lst3=list()
for i in range(13):
  lst3.append(y[i])
lst3  #list of total games won

x=pd.DataFrame({"winner":df['winner'],"toss_winner":df['toss_winner'],"toss_decision":df['toss_decision']})
y=x['toss_winner'].value_counts().sort_index(ascending=True)
y

new_list=[]
df1=DF
yy=df1['toss_winner'].value_counts().sort_index(ascending=True)
yy
for i in range(13):
  new_list.append(yy[i])
new_list

df2=DF
x1=pd.DataFrame({"winner":df2['winner'],"toss_winner":df2['toss_winner']})

x2=x1.reset_index(drop=True)
x2



lst_toss_win=list()
for i in lst:
  temp=0
  for k in range(752):
    if x2['winner'][k]==i and x2['toss_winner'][k]==i:
      temp+=1
    else:
      pass
  lst_toss_win.append(temp)
lst_toss_win  #list of winning when toss won

win_percent=list()
win=0
for i in range(13):
    win=(lst_toss_win[i]/new_list[i])*100
    win_percent.append(win)
win_percent

win_percent_toss=pd.DataFrame({"Team":lst,"Total_matches_played":lst_2,"Total_matches_won":lst3,"no:times toss won":new_list,
                               "no:times won when toss won":lst_toss_win,"Win_match_toss_%":win_percent})
win_percent_toss

fig_all= px.sunburst(win_percent_toss, path=['Win_match_toss_%',
                            'no:times toss won',
                            'Team'] ,
                 title="Win Percentage When teams won toss" )
fig_all.show()

import plotly.graph_objects as go
app = JupyterDash(__name__)

from dash.dependencies import Input, Output

app=JupyterDash()
server=app.server
app.layout=html.Div([
                     html.H1(children='TATA IPL',
           style={"textAlign": "center",
                  'color':'#8A2BE2',
                  'background-image':'/content/IPL-Logo-PNG_foqmcj.png',
                  'font-size':'300%'

                  }),

 
   html.H2(children='''
       IPL ANALYSIS
   ''',
   style={"textAlign": "center",
          'color':'#00FF7F'
   }),
   html.Div([
   #html.Label("Please select any option"),
        dcc.Dropdown(
         id='FirstDropdown',
         options=[
                {'label':"Best teams based on winning count",'value':'v1'},
                {'label':"Best player based on player of the match",'value':'v2'},
                {'label':"best winning teams based on the win by runs ",'value':'v3'},
                {'label':"best winning teams based on the win by Wickets ",'value':'v4'},
                {'label':"Luckiest venue for each team",'value':'v5'},
                {'label':"probability of winning matches vs winning toss",'value':'v6'}
                  
         ],
         placeholder="Please choose an option",
         #value='v1'
         ),
           html.Br(),
   html.Div([
             dcc.Dropdown(
                 id='SecondDropdown',
                 options=[
                          {'label':'CSK','value':'csk'},
                          {'label':'RCB','value':'rcb'},
                          {'label':'SRH','value':'srh'},
                          {'label':'RR','value':'rr'},
                          {'label':'KKR','value':'kkr'},
                          {'label':'MI','value':'mi'},
                          {'label':'DC','value':'dc'},
                          {'label':'KXIP','value':'kxip'},
                          {'label':'Deccan Chargers','value':'de'},
                          {'label':'RPS','value':'rps'},
                          {'label':'GL','value':'gl'},
                          {'label':'PWI','value':'pwi'},
                          {'label':'Kochi','value':'kochi'}
                          ],placeholder='Teams'
                          )
             ]),
             html.Br(),
             
             
             
             html.Div(dcc.Graph(id='graph'))
             
             
             ])
                                      
])

@app.callback(
    Output('graph','figure'),
    [Input(component_id='FirstDropdown',component_property='value')]
)
def select_graph(value):

  if value=='v1':
    return fig1
  elif value=='v2':
    return fig2
  elif value=='v3':
    return fig3
  elif value=='v4':
    return fig31
  elif value=='v5':
    return fig41
  else:
    return fig_all

if __name__ == '__main__':
   app.run_server(mode="external",debug=True)